{"version":3,"file":"translator.js","sources":["../src/misc.ts","../packages/translator-utils-axios-helper/index.js","../src/source/google.ts","../src/source/microsoft.ts","../src/source/sogou.ts","../src/index.browser.ts"],"sourcesContent":["import { Platform, Target } from \"types.js\"\n\nexport const BAIDU_LANGUAGE: Target['baidu'][] = [\"zh\",\"jp\",\"jpka\",\"th\",\"fra\",\"en\",\"spa\",\"kor\",\"tr\",\"vie\",\"ms\",\"de\",\"ru\",\"ir\",\"ara\",\"est\",\"be\",\"bul\",\"hi\",\"is\",\"pl\",\"fa\",\"dan\",\"tl\",\"fin\",\"nl\",\"ca\",\"cs\",\"hr\",\"lv\",\"lt\",\"rom\",\"af\",\"no\",\"pt_br\",\"pt\",\"swe\",\"sr\",\"eo\",\"sk\",\"slo\",\"sw\",\"uk\",\"iw\",\"el\",\"hu\",\"hy\",\"it\",\"id\",\"sq\",\"am\",\"as\",\"az\",\"eu\",\"bn\",\"bs\",\"gl\",\"ka\",\"gu\",\"ha\",\"ig\",\"iu\",\"ga\",\"zu\",\"kn\",\"kk\",\"ky\",\"lb\",\"mk\",\"mt\",\"mi\",\"mr\",\"ne\",\"or\",\"pa\",\"qu\",\"tn\",\"si\",\"ta\",\"tt\",\"te\",\"ur\",\"uz\",\"cy\",\"yo\",\"yue\",\"wyw\",\"cht\"]\n\nexport const GOOGLE_LANGUAGE: Target['google'][] = [\"sq\",\"ar\",\"am\",\"as\",\"az\",\"ee\",\"ay\",\"ga\",\"et\",\"or\",\"om\",\"eu\",\"be\",\"bm\",\"bg\",\"is\",\"pl\",\"bs\",\"fa\",\"bho\",\"af\",\"tt\",\"da\",\"de\",\"dv\",\"ti\",\"doi\",\"ru\",\"fr\",\"sa\",\"tl\",\"fi\",\"fy\",\"km\",\"ka\",\"gom\",\"gu\",\"gn\",\"kk\",\"ht\",\"ko\",\"ha\",\"nl\",\"ky\",\"gl\",\"ca\",\"cs\",\"kn\",\"co\",\"kri\",\"hr\",\"qu\",\"ku\",\"ckb\",\"la\",\"lv\",\"lo\",\"lt\",\"ln\",\"lg\",\"lb\",\"rw\",\"ro\",\"mg\",\"mt\",\"mr\",\"ml\",\"ms\",\"mk\",\"mai\",\"mi\",\"mni-mtei\",\"mn\",\"bn\",\"lus\",\"my\",\"hmn\",\"xh\",\"zu\",\"ne\",\"no\",\"pa\",\"pt\",\"ps\",\"ny\",\"ak\",\"ja\",\"sv\",\"sm\",\"sr\",\"nso\",\"st\",\"si\",\"eo\",\"sk\",\"sl\",\"sw\",\"gd\",\"ceb\",\"so\",\"tg\",\"te\",\"ta\",\"th\",\"tr\",\"tk\",\"cy\",\"ug\",\"ur\",\"uk\",\"uz\",\"es\",\"iw\",\"el\",\"haw\",\"sd\",\"hu\",\"sn\",\"hy\",\"ig\",\"ilo\",\"it\",\"yi\",\"hi\",\"su\",\"id\",\"jw\",\"en\",\"yo\",\"vi\",\"zh-tw\",\"zh-cn\",\"ts\"]\n\nexport const DEEPL_LANGUAGE: Target['deepl'][] = [\"en\",\"en-us\",\"en-gb\",\"de\",\"fr\",\"es\",\"it\",\"nl\",\"pl\",\"ru\",\"pt\",\"pt-pt\",\"pt-br\",\"ja\",\"zh\",\"bg\",\"cs\",\"da\",\"et\",\"fi\",\"el\",\"hu\",\"id\",\"lv\",\"lt\",\"ro\",\"sk\",\"sl\",\"sv\",\"uk\",\"tr\",\"ko\",\"nb\"]\n\nexport const BING_LANGUAGE: Target['microsoft'][] = [\"lzh\",\"ikt\",\"iu-latn\",\"mn-cyrl\",\"mn-mong\",\"hsb\",\"zh-hans\",\"zh-hant\",\"da\",\"uk\",\"uz\",\"ur\",\"nb\",\"hy\",\"ru\",\"bg\",\"tlh-latn\",\"hr\",\"otq\",\"is\",\"gl\",\"ca\",\"hu\",\"af\",\"kn\",\"hi\",\"id\",\"gu\",\"kk\",\"iu\",\"tk\",\"tr\",\"ty\",\"sr-latn\",\"sr-cyrl\",\"or\",\"cy\",\"bn\",\"yua\",\"ne\",\"ba\",\"eu\",\"he\",\"el\",\"ku\",\"kmr\",\"de\",\"it\",\"lv\",\"cs\",\"ti\",\"fj\",\"sk\",\"sl\",\"sw\",\"pa\",\"ja\",\"ps\",\"ky\",\"ka\",\"mi\",\"to\",\"fo\",\"fr\",\"fr-ca\",\"pl\",\"bs\",\"fa\",\"te\",\"ta\",\"th\",\"ht\",\"ga\",\"et\",\"sv\",\"zu\",\"lt\",\"yue\",\"so\",\"ug\",\"my\",\"ro\",\"lo\",\"fi\",\"mww\",\"en\",\"nl\",\"fil\",\"sm\",\"pt\",\"pt-pt\",\"bo\",\"es\",\"vi\",\"prs\",\"dv\",\"az\",\"am\",\"sq\",\"ar\",\"as\",\"tt\",\"ko\",\"mk\",\"mg\",\"mr\",\"ml\",\"ms\",\"mt\",\"km\"]\n\nexport const SOGOU_LANGUAGE: Target['sogou'][] = [\"ar\",\"pl\",\"da\",\"de\",\"ru\",\"fr\",\"fi\",\"ko\",\"nl\",\"cs\",\"pt\",\"ja\",\"sv\",\"th\",\"tr\",\"es\",\"hu\",\"en\",\"it\",\"vi\",\"zh-CHS\"]\nexport const YANDEX_LANGUAGE: Target['yandex'][] = [\"af\",\"sq\",\"am\",\"ar\",\"hy\",\"az\",\"ba\",\"eu\",\"be\",\"bn\",\"bs\",\"bg\",\"my\",\"ca\",\"ceb\",\"zh\",\"cv\",\"hr\",\"cs\",\"da\",\"nl\",\"sjn\",\"emj\",\"en\",\"eo\",\"et\",\"fi\",\"fr\",\"gl\",\"ka\",\"de\",\"el\",\"gu\",\"ht\",\"he\",\"mrj\",\"hi\",\"hu\",\"is\",\"id\",\"ga\",\"it\",\"ja\",\"jv\",\"kn\",\"kk\",\"kazlat\",\"km\",\"ko\",\"ky\",\"lo\",\"la\",\"lv\",\"lt\",\"lb\",\"mk\",\"mg\",\"ms\",\"ml\",\"mt\",\"mi\",\"mr\",\"mhr\",\"mn\",\"ne\",\"no\",\"pap\",\"fa\",\"pl\",\"pt\",\"pt-br\",\"pa\",\"ro\",\"ru\",\"gd\",\"sr\",\"sr-latn\",\"si\",\"sk\",\"sl\",\"es\",\"su\",\"sw\",\"sv\",\"tl\",\"tg\",\"ta\",\"tt\",\"te\",\"th\",\"tr\",\"udm\",\"uk\",\"ur\",\"uz\",\"uzbcyr\",\"vi\",\"cy\",\"xh\",\"sah\",\"yi\",\"zu\"]\nexport const SupportedLanguage = <L extends Target[P], P extends Platform = 'google'>(source: P, language: L): boolean => {\n    let tmpList: string[] = []\n    switch (source) {\n        case 'baidu': tmpList = BAIDU_LANGUAGE; break\n        case 'deepl': tmpList = DEEPL_LANGUAGE; break\n        case 'microsoft': tmpList = BING_LANGUAGE; break\n        case 'sogou': tmpList = SOGOU_LANGUAGE; break\n        case 'yandex': tmpList = YANDEX_LANGUAGE; break\n        default: tmpList = GOOGLE_LANGUAGE\n    }\n\n    return tmpList.map(x => x.toLowerCase()).includes(language.toLowerCase())\n}\n\nexport const IsChs = (lang = 'zh') => /^zh(?:_|\\-)(?:cn|sg|my|chs)|zh|chs|zho$/.test(lang.toLowerCase())\nexport const IsCht = (lang = 'zh_tw') => /^zh(?:_|\\-)(?:tw|hk|mo|cht)|cht$/.test(lang.toLowerCase())\n\nexport const generateUUID = async (): Promise<string> => {\n    if (typeof process !== 'undefined') {\n        const {webcrypto} = await import('crypto')\n        return webcrypto.randomUUID()\n    } else if (typeof window !== 'undefined') {\n        return crypto.randomUUID()\n    } else {\n        return ''\n    }\n}","/// <reference path=\"index.d.ts\" />\nclass AxiosRequest {\n    requestHandle (url, postData, options = {}) {\n        if (!options.timeout) {\n            options.timeout = 30000\n        }\n        \n        const validPostRequest = (options?.method??'').toLowerCase() === 'post' && postData\n        if (!options.headers) {\n            options.headers = {}\n        }\n        if (!options.headers?.['content-type']) {\n            options.headers['content-type'] = 'application/x-www-form-urlencoded'\n        }\n        if (validPostRequest) {\n            if (typeof postData === 'object') {\n                postData = JSON.stringify(postData)\n                options.headers['content-type'] = 'application/json'\n            }\n            options.headers['content-length'] = ArrayBuffer.byteLength(postData)\n            options.body = postData\n        }\n        return new Promise((resolve, reject) => {\n            fetch(url, options).then(async response => {\n                return {response, data: await response.text()}\n            }).then(res => {\n                resolve(this.responseBuilder(res.response, res.data))\n            }).catch(e => {\n                reject({ cause: e })\n            })\n        })\n    }\n    //https://stackoverflow.com/questions/9804777/how-to-test-if-a-string-is-json-or-not\n    isJson (str) {\n        try {\n            JSON.parse(str)\n        } catch (e) {\n            return false\n        }\n        return true\n    }\n    responseBuilder (res, data) {\n        const dataString = data.toString()\n        const isJson = this.isJson(dataString)\n\n        let headers = Object.fromEntries(res.headers.entries())\n        //for workers\n        if (headers['set-cookie'] && res.headers.getAll) {\n            headers['set-cookie'] = res.headers.getAll('set-cookie')\n        }\n        return {\n            status: res.status,\n            statusText: res.statusText,\n            headers,\n            data: isJson ? JSON.parse(dataString) : dataString\n        }\n    }\n    get (url, options) {\n        return this.requestHandle(url, null, {method: 'GET', ...options})\n    }\n    post (url, data, options) {\n        return this.requestHandle(url, data, {method: 'POST', ...options})\n    }\n}\n\nconst axiosFetch = new AxiosRequest\n\nexport default axiosFetch\n","import { TranslatorModuleFunction } from '../types.js'\nimport { SupportedLanguage } from '../misc.js'\nimport axiosFetch from 'translator-utils-axios-helper'\n\n\nconst GoogleTranslate: TranslatorModuleFunction<'google'> = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #GoogleTranslate ')}\n    if (!SupportedLanguage('google', target || 'en')) {return await Promise.reject('Not supported target language #GoogleTranslate ')}\n\n    if (Array.isArray(text)) {\n        text = text.join(\"\\n\")\n    }\n    const query = new URLSearchParams({\"client\": \"webapp\", \"sl\": \"auto\", \"tl\": (target || 'en'), \"hl\": (target || 'en'), \"dt\": \"t\", \"clearbtn\": '1', \"otf\": '1', \"pc\": '1', \"ssel\": '0', \"tsel\": '0', \"kc\": '2', \"tk\": \"\", \"q\": text})\n    return await new Promise(async (resolve, reject) => {\n        axiosFetch.get('https://translate.google.com/translate_a/single?' + query.toString(), {\n            headers: {\n                referer: 'https://translate.google.com/',\n                authority: 'translate.google.com'\n            }\n        }).then(response => {\n            if (response.data && Array.isArray(response.data[0])) {\n                resolve(raw ? response.data : response.data[0].filter(translate => translate).map(translate => translate[0]).join(''))\n                //resolve(response.data[0].filter(translate => translate).map(translate => translate[0]).join(''))\n            }\n            reject(raw ? response.data : 'Invalid content #GoogleTranslate ')\n        }).catch(e => {\n            reject(raw ? e : e.toString())\n        })\n    })\n}\n\nconst GoogleBrowserTranslate: TranslatorModuleFunction<'google'> = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #GoogleTranslate ')}\n    if (!SupportedLanguage('google', target || 'en')) {return await Promise.reject('Not supported target language #GoogleTranslate ')}\n\n    //curl 'https://translate.googleapis.com/translate_a/t?anno=3&client=wt_lib&format=html&v=1.0&key&sl=auto&tl=zh&tc=1&sr=1&tk=164775.366094&mode=1' --data-raw 'q=%E3%81%93%E3%82%93%E3%81%AB%E3%81%A1%E3%81%AF' --compressed\n    //https://vielhuber.de/zh-cn/blog-zh-cn/google-translation-api-hacking/\n    let query = new URLSearchParams({anno: '4', client: 'te_lib', format: 'html', v: '1.0', key: 'AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw', sl: 'auto', tl: (target || 'en'), tc: '1', sr: '1', tk: GoogleTranslateTk(text), mode: '1'})\n    //let formData = new URLSearchParams({q: text})\n    return await new Promise(async (resolve, reject) => {\n        axiosFetch.post('https://translate.googleapis.com/translate_a/t?' + query.toString(), 'q=' + ((text instanceof Array) ? text.map(x => encodeURIComponent(x)).join('&q=') : encodeURIComponent(text))).then((response: any) => {\n            if (response.data && response.data instanceof Array) {\n                resolve(raw ? response.data : response.data.map((x: any) => x?.[0] || '').join(\"\\n\"))\n            }\n            reject(raw ? response.data : 'Invalid content #GoogleTranslate ')\n        }).catch(e => {\n            reject(raw ? e : e.toString())\n        })\n    })\n}\n\nconst hl = function (a: number, b: string) {\n    let c = 0\n    for (; c < b.length - 2; c += 3) {\n        let d: string | number = b.charAt(c + 2)\n        d = \"a\" <= d ? (d.charCodeAt(0) - 87) : Number(d)\n        d = \"+\" == b.charAt(c + 1) ? (a >>> d) : (a << d)\n        a = \"+\" == b.charAt(c) ? (a + d & 4294967295) : (a ^ d)\n    }\n    return a\n}\nconst getCharCodeList = function (text: string) {\n    let charCodeList = [], charCodeListIndex = 0\n    for (let index = 0; index < text.length; index++) {\n        let charCode = text.charCodeAt(index)\n        if (128 > charCode) {\n            charCodeList[charCodeListIndex++] = charCode\n        } else {\n            if (2048 > charCode) {\n                charCodeList[charCodeListIndex++] = charCode >> 6 | 192\n            } else  {\n                if (55296 == (charCode & 64512) && index + 1 < text.length && 56320 == (text.charCodeAt(index + 1) & 64512)) {\n                    charCode = 65536 + ((charCode & 1023) << 10) + (text.charCodeAt(++index) & 1023)\n                    charCodeList[charCodeListIndex++] = charCode >> 18 | 240\n                    charCodeList[charCodeListIndex++] = charCode >> 12 & 63 | 128\n                } else {\n                    charCodeList[charCodeListIndex++] = charCode >> 12 | 224\n                }\n                charCodeList[charCodeListIndex++] = charCode >> 6 & 63 | 128\n            }\n            charCodeList[charCodeListIndex++] = charCode & 63 | 128\n        }\n    }\n    return charCodeList\n}\n\n//https://translate.google.com/translate_a/element?cb=gtElInit&hl=zh-CN&client=wt c._ctkk\nconst GoogleTranslateTk = (originalText: string | string[] = '', tkk: number[] = [464385, 3806605782]) => {\n    //from https://translate.googleapis.com/_/translate_http/_/js/k=translate_http.tr.zh_CN.D7QeyoDkDhY.O/d=1/exm=el_conf/ed=1/rs=AN8SPfq20C5s1IToiD2r2PKoyh-SRQysPA/m=el_main\n    let text\n    if (originalText instanceof Array) {\n        text = JSON.parse(JSON.stringify(originalText)).join('')\n    } else {\n        text = originalText\n    }\n    const charCodeList = getCharCodeList(text)\n    let a = tkk[0]\n    for (const charCode of charCodeList) {\n        a += charCode\n        a = hl(a, '+-a^+6')\n    }\n    a = hl(a, '+-3^+b+-f')\n    a ^= tkk[1] ? tkk[1] + 0 : 0\n    if (a < 0) {\n        a = (a & 2147483647) + 2147483648\n    }\n    a %= 1E6\n    return a.toString() + '.' + (a ^ tkk[0])\n}\n\nexport {GoogleTranslate, GoogleBrowserTranslate, GoogleTranslateTk}\n","import { SupportedLanguage } from '../misc.js'\nimport { TranslatorModuleFunction } from '../types.js'\nimport axiosFetch from 'translator-utils-axios-helper'\n\nconst MicrosoftTranslator: TranslatorModuleFunction<'microsoft'> = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #MicrosoftTranslator ')}\n    if (!SupportedLanguage('microsoft', target || 'en')) {return await Promise.reject('Not supported target language #MicrosoftTranslator ')}\n\n    //get IG, token, key\n    //TODO fix type \n    let page: any | '' = ''\n    try {\n        page = await axiosFetch.get('https://www.bing.com/translator')\n    } catch (e) {\n        return await Promise.reject('Unable to get translator page #MicrosoftTranslator ')\n    }\n    if (page) {\n        let _G: any | null = null, params_AbusePreventionHelper: any | null = null\n        try {\n            _G = (new Function('return ' + /_G=(\\{.+?\\});/.exec(page.data || '')?.[1] || '{IG: \"\"}'))()\n            params_AbusePreventionHelper = (new Function('return ' + /params_AbusePreventionHelper = (\\[.+?\\]);/.exec(page.data || '')?.[1] || '[\"\", \"\"]'))()\n        } catch(e) {\n            return await Promise.reject('Unable to get variables #MicrosoftTranslator ')\n        }\n        return await new Promise(async (resolve, reject) => {\n            axiosFetch.post('https://www.bing.com/ttranslatev3?' + (new URLSearchParams({\n                isVertical: '1',\n                IG: _G.IG,\n                IID: 'translator.5024.1'\n            })).toString(), (new URLSearchParams({\n                fromLang: 'auto-detect',\n                text: Array.isArray(text) ? text.join(\"\\n\") : text,\n                to: (target || 'en'),\n                token: params_AbusePreventionHelper[1],\n                key: params_AbusePreventionHelper[0]\n            })).toString()).then((response: any) => {\n                if (!response.data.statusCode && response.data instanceof Array ) {\n                    resolve(raw ? response.data : response.data.map((x: any) => (x?.translations || []).map((translation: any) => translation?.text || '')).flat().join(\"\\n\"))\n                }\n                reject(raw ? response.data : 'Invalid content #MicrosoftTranslator ')\n            }).catch(e => {\n                reject(raw ? e : e.toString())\n            })\n        })\n    } else {\n        return await Promise.reject('Empty page #MicrosoftTranslator ')\n    }\n}\n\nconst GetMicrosoftBrowserTranslatorAuth = async () => {\n    try {\n        return (await axiosFetch.get('https://edge.microsoft.com/translate/auth')).data\n    } catch (e) {\n        return ''\n    }\n}\n\nconst MicrosoftBrowserTranslator: TranslatorModuleFunction<'microsoft'> = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #MicrosoftTranslator ')}\n    if (!SupportedLanguage('microsoft', target || 'en')) {return await Promise.reject('Not supported target language #MicrosoftTranslator ')}\n\n    //get jwt\n    const jwt = await GetMicrosoftBrowserTranslatorAuth()\n    if (jwt) {\n        return await new Promise(async (resolve, reject) => {\n            axiosFetch.post(`https://api.cognitive.microsofttranslator.com/translate?from=&to=${target}&api-version=3.0&includeSentenceLength=true`, JSON.stringify(text instanceof Array ? text.map(tmpText => ({Text: tmpText})) : [{Text: text}]), {\n                headers: {\n                    'content-type': 'application/json',\n                    authorization: `Bearer ${jwt}`\n                }\n            }).then((response: any) => {\n                if (response.data && response.data instanceof Array) {\n                    resolve(raw ? response.data : response.data.map((x: any) => (x?.translations || [])?.[0]?.text || '').join(\"\\n\"))\n                }\n                reject(raw ? response.data : 'Invalid content #MicrosoftTranslator ')\n            }).catch(e => {\n                reject(raw ? e : e.toString())\n            })\n        })\n    } else {\n        return await Promise.reject('Invalid jwt #MicrosoftTranslator ')\n    }\n    \n}\n\nexport { MicrosoftTranslator, MicrosoftBrowserTranslator, GetMicrosoftBrowserTranslatorAuth }\n","import { TranslatorModuleFunction } from '../types.js'\nimport { SupportedLanguage } from '../misc.js'\nimport axiosFetch from 'translator-utils-axios-helper'\n\nconst SogouBrowserTranslator: TranslatorModuleFunction<'sogou'> = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #SogouTranslator ')}\n    if (!SupportedLanguage('sogou', target || 'en')) {return await Promise.reject('Not supported target language #SogouTranslator ')}\n\n    let body = JSON.stringify({\n        from_lang: \"auto\",\n        to_lang: target,\n        trans_frag: text instanceof Array ? text.map(x => ({text: x})) : [{text}]\n    })\n    return await new Promise(async (resolve, reject) => {\n        axiosFetch.post('https://go.ie.sogou.com/qbpc/translate', `S-Param=${body}`).then(response => {\n            if (response?.data?.data?.trans_result && response?.data?.data?.trans_result instanceof Array) {\n                resolve(raw ? response.data : (response.data.data.trans_result.map((x: any) => x.trans_text).join(\"\\n\") || ''))\n            }\n            reject(raw ? response.data : 'Invalid content #SogouTranslator ')\n        }).catch(e => {\n            reject(raw ? e : e.toString())\n        })\n    })\n}\n\nexport {SogouBrowserTranslator}\n","import { GoogleBrowserTranslate } from \"./source/google.js\"\nimport { MicrosoftBrowserTranslator } from \"./source/microsoft.js\"\nimport { SogouBrowserTranslator } from \"./source/sogou.js\"\n\nimport { BING_LIST, GOOGLE_LIST, SOGOU_LIST, TranslatorFunction } from \"types.js\"\n\nconst Translator: TranslatorFunction = async (text = '', platform, target, raw) => {\n    let result = {content: '', message: ''}\n    try {\n        switch (platform) {\n            case 'google':\n                result.content = await GoogleBrowserTranslate(text, target as GOOGLE_LIST, !!raw)\n                break\n            case 'microsoft':\n                result.content = await MicrosoftBrowserTranslator(text, target as BING_LIST, !!raw)\n                break\n            case 'sogou':\n                result.content = await SogouBrowserTranslator(text, target as SOGOU_LIST, !!raw)\n                break\n        }\n    } catch (e) {\n        result.message = String(e)\n    }\n    return result\n}\n\nexport default Translator\n"],"names":["AxiosRequest","_classCallCheck","_createClass","key","value","requestHandle","url","postData","_options$method","_options$headers","_this","options","arguments","length","undefined","timeout","validPostRequest","method","toLowerCase","headers","_typeof","JSON","stringify","ArrayBuffer","byteLength","body","Promise","resolve","reject","fetch","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_callee$","_context","prev","next","t0","text","t1","sent","abrupt","data","stop","_x","apply","res","responseBuilder","e","cause","isJson","str","parse","dataString","toString","Object","fromEntries","entries","getAll","status","statusText","get","_objectSpread","post","axiosFetch"],"mappings":"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"}