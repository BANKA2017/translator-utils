{"version":3,"file":"translator.min.js","sources":["../src/misc.ts","../packages/translator-utils-axios-helper/index.js","../src/source/google.ts","../src/source/microsoft.ts","../src/index.browser.ts","../src/source/sogou.ts"],"sourcesContent":["import { Platform, Target } from \"types.js\"\n\nexport const BAIDU_LANGUAGE: Target[] = [\"zh\",\"jp\",\"jpka\",\"th\",\"fra\",\"en\",\"spa\",\"kor\",\"tr\",\"vie\",\"ms\",\"de\",\"ru\",\"ir\",\"ara\",\"est\",\"be\",\"bul\",\"hi\",\"is\",\"pl\",\"fa\",\"dan\",\"tl\",\"fin\",\"nl\",\"ca\",\"cs\",\"hr\",\"lv\",\"lt\",\"rom\",\"af\",\"no\",\"pt_br\",\"pt\",\"swe\",\"sr\",\"eo\",\"sk\",\"slo\",\"sw\",\"uk\",\"iw\",\"el\",\"hu\",\"hy\",\"it\",\"id\",\"sq\",\"am\",\"as\",\"az\",\"eu\",\"bn\",\"bs\",\"gl\",\"ka\",\"gu\",\"ha\",\"ig\",\"iu\",\"ga\",\"zu\",\"kn\",\"kk\",\"ky\",\"lb\",\"mk\",\"mt\",\"mi\",\"mr\",\"ne\",\"or\",\"pa\",\"qu\",\"tn\",\"si\",\"ta\",\"tt\",\"te\",\"ur\",\"uz\",\"cy\",\"yo\",\"yue\",\"wyw\",\"cht\"]\n\nexport const GOOGLE_LANGUAGE: Target[] = [\"sq\",\"ar\",\"am\",\"as\",\"az\",\"ee\",\"ay\",\"ga\",\"et\",\"or\",\"om\",\"eu\",\"be\",\"bm\",\"bg\",\"is\",\"pl\",\"bs\",\"fa\",\"bho\",\"af\",\"tt\",\"da\",\"de\",\"dv\",\"ti\",\"doi\",\"ru\",\"fr\",\"sa\",\"tl\",\"fi\",\"fy\",\"km\",\"ka\",\"gom\",\"gu\",\"gn\",\"kk\",\"ht\",\"ko\",\"ha\",\"nl\",\"ky\",\"gl\",\"ca\",\"cs\",\"kn\",\"co\",\"kri\",\"hr\",\"qu\",\"ku\",\"ckb\",\"la\",\"lv\",\"lo\",\"lt\",\"ln\",\"lg\",\"lb\",\"rw\",\"ro\",\"mg\",\"mt\",\"mr\",\"ml\",\"ms\",\"mk\",\"mai\",\"mi\",\"mni-mtei\",\"mn\",\"bn\",\"lus\",\"my\",\"hmn\",\"xh\",\"zu\",\"ne\",\"no\",\"pa\",\"pt\",\"ps\",\"ny\",\"ak\",\"ja\",\"sv\",\"sm\",\"sr\",\"nso\",\"st\",\"si\",\"eo\",\"sk\",\"sl\",\"sw\",\"gd\",\"ceb\",\"so\",\"tg\",\"te\",\"ta\",\"th\",\"tr\",\"tk\",\"cy\",\"ug\",\"ur\",\"uk\",\"uz\",\"es\",\"iw\",\"el\",\"haw\",\"sd\",\"hu\",\"sn\",\"hy\",\"ig\",\"ilo\",\"it\",\"yi\",\"hi\",\"su\",\"id\",\"jw\",\"en\",\"yo\",\"vi\",\"zh-tw\",\"zh-cn\",\"ts\"]\n\nexport const DEEPL_LANGUAGE: Target[] = [\"en\",\"en-us\",\"en-gb\",\"de\",\"fr\",\"es\",\"it\",\"nl\",\"pl\",\"ru\",\"pt\",\"pt-pt\",\"pt-br\",\"ja\",\"zh\",\"bg\",\"cs\",\"da\",\"et\",\"fi\",\"el\",\"hu\",\"id\",\"lv\",\"lt\",\"ro\",\"sk\",\"sl\",\"sv\",\"uk\",\"tr\",\"ko\",\"nb\"]\n\nexport const BING_LANGUAGE: Target[] = [\"lzh\",\"ikt\",\"iu-latn\",\"mn-cyrl\",\"mn-mong\",\"hsb\",\"zh-hans\",\"zh-hant\",\"da\",\"uk\",\"uz\",\"ur\",\"nb\",\"hy\",\"ru\",\"bg\",\"tlh-latn\",\"hr\",\"otq\",\"is\",\"gl\",\"ca\",\"hu\",\"af\",\"kn\",\"hi\",\"id\",\"gu\",\"kk\",\"iu\",\"tk\",\"tr\",\"ty\",\"sr-latn\",\"sr-cyrl\",\"or\",\"cy\",\"bn\",\"yua\",\"ne\",\"ba\",\"eu\",\"he\",\"el\",\"ku\",\"kmr\",\"de\",\"it\",\"lv\",\"cs\",\"ti\",\"fj\",\"sk\",\"sl\",\"sw\",\"pa\",\"ja\",\"ps\",\"ky\",\"ka\",\"mi\",\"to\",\"fo\",\"fr\",\"fr-ca\",\"pl\",\"bs\",\"fa\",\"te\",\"ta\",\"th\",\"ht\",\"ga\",\"et\",\"sv\",\"zu\",\"lt\",\"yue\",\"so\",\"ug\",\"my\",\"ro\",\"lo\",\"fi\",\"mww\",\"en\",\"nl\",\"fil\",\"sm\",\"pt\",\"pt-pt\",\"bo\",\"es\",\"vi\",\"prs\",\"dv\",\"az\",\"am\",\"sq\",\"ar\",\"as\",\"tt\",\"ko\",\"mk\",\"mg\",\"mr\",\"ml\",\"ms\",\"mt\",\"km\"]\n\nexport const SOGOU_LANGUAGE: Target[] = [\"ar\",\"pl\",\"da\",\"de\",\"ru\",\"fr\",\"fi\",\"ko\",\"nl\",\"cs\",\"pt\",\"ja\",\"sv\",\"th\",\"tr\",\"es\",\"hu\",\"en\",\"it\",\"vi\",\"zh-CHS\"]\nexport const YANDEX_LANGUAGE: Target[] = [\"af\",\"sq\",\"am\",\"ar\",\"hy\",\"az\",\"ba\",\"eu\",\"be\",\"bn\",\"bs\",\"bg\",\"my\",\"ca\",\"ceb\",\"zh\",\"cv\",\"hr\",\"cs\",\"da\",\"nl\",\"sjn\",\"emj\",\"en\",\"eo\",\"et\",\"fi\",\"fr\",\"gl\",\"ka\",\"de\",\"el\",\"gu\",\"ht\",\"he\",\"mrj\",\"hi\",\"hu\",\"is\",\"id\",\"ga\",\"it\",\"ja\",\"jv\",\"kn\",\"kk\",\"kazlat\",\"km\",\"ko\",\"ky\",\"lo\",\"la\",\"lv\",\"lt\",\"lb\",\"mk\",\"mg\",\"ms\",\"ml\",\"mt\",\"mi\",\"mr\",\"mhr\",\"mn\",\"ne\",\"no\",\"pap\",\"fa\",\"pl\",\"pt\",\"pt-br\",\"pa\",\"ro\",\"ru\",\"gd\",\"sr\",\"sr-latn\",\"si\",\"sk\",\"sl\",\"es\",\"su\",\"sw\",\"sv\",\"tl\",\"tg\",\"ta\",\"tt\",\"te\",\"th\",\"tr\",\"udm\",\"uk\",\"ur\",\"uz\",\"uzbcyr\",\"vi\",\"cy\",\"xh\",\"sah\",\"yi\",\"zu\"]\nexport const SupportedLanguage = <L extends Target>(List: Target[], language: L): boolean => {\n    return List.map(x => x.toLowerCase()).includes(language.toLowerCase())\n}\n\nexport const IsChs = (lang = 'zh') => /^zh(?:_|\\-)(?:cn|sg|my|chs)|zh|chs|zho$/.test(lang.toLowerCase())\nexport const IsCht = (lang = 'zh_tw') => /^zh(?:_|\\-)(?:tw|hk|mo|cht)|cht$/.test(lang.toLowerCase())\n\nexport const generateUUID = async (): Promise<string> => {\n    // @ts-ignore\n    if (typeof process !== 'undefined' && !process?.browser) {\n        const {webcrypto} = await import('crypto')\n        return webcrypto.randomUUID()\n    } else if (typeof window !== 'undefined') {\n        return crypto.randomUUID()\n    } else {\n        return ''\n    }\n}","/// <reference path=\"index.d.ts\" />\nclass AxiosRequest {\n    requestHandle (url, postData, options = {}) {\n        if (!options.timeout) {\n            options.timeout = 30000\n        }\n        \n        const validPostRequest = (options?.method??'').toLowerCase() === 'post' && postData\n        if (!options.headers) {\n            options.headers = {}\n        }\n        if (!options.headers?.['content-type']) {\n            options.headers['content-type'] = 'application/x-www-form-urlencoded'\n        }\n        if (validPostRequest) {\n            if (typeof postData === 'object') {\n                postData = JSON.stringify(postData)\n                options.headers['content-type'] = 'application/json'\n            }\n            options.headers['content-length'] = postData.length\n            options.body = postData\n        }\n        return new Promise((resolve, reject) => {\n            fetch(url, options).then(async response => {\n                return {response, data: await response.text()}\n            }).then(res => {\n                resolve(this.responseBuilder(res.response, res.data))\n            }).catch(e => {\n                reject({ cause: e, toString: () => e.toString() })\n            })\n        })\n    }\n    //https://stackoverflow.com/questions/9804777/how-to-test-if-a-string-is-json-or-not\n\n    responseBuilder (res, data) {\n        data = data.toString()\n        try {data = JSON.parse(data)} catch (e) {}\n\n        let headers = Object.fromEntries(res.headers.entries())\n        \n        if (headers['set-cookie'] && res.headers.getAll) {\n            //workers\n            //TypeError: getAll() can only be used with the header name \"Set-Cookie\".\n            headers['set-cookie'] = res.headers.getAll('set-cookie')\n        } else if (headers['set-cookie']) {\n            //Deno and Node.js 18\n            //https://github.com/denoland/deno/pull/5100\n            headers['set-cookie'] = [...res.headers.entries()].filter(header => header[0] === 'set-cookie').map(header => header[1])\n        }\n        return {\n            status: res.status,\n            statusText: res.statusText,\n            headers,\n            data\n        }\n    }\n    get (url, options) {\n        options.method = 'GET'\n        return this.requestHandle(url, null, options)\n    }\n    post (url, data, options) {\n        options.method = 'POST'\n        return this.requestHandle(url, data, options)\n    }\n}\n\nconst axiosFetch = new AxiosRequest\n\nexport default axiosFetch\n","import { TranslatorModuleFunction } from '../types.js'\nimport { GOOGLE_LANGUAGE, SupportedLanguage } from '../misc.js'\nimport axiosFetch from 'translator-utils-axios-helper'\n\n\nconst GoogleTranslate: TranslatorModuleFunction = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #GoogleTranslate ')}\n    if (!SupportedLanguage(GOOGLE_LANGUAGE, target || 'en')) {return await Promise.reject('Not supported target language #GoogleTranslate ')}\n\n    if (Array.isArray(text)) {\n        text = text.join(\"\\n\")\n    }\n    const query = new URLSearchParams({\"client\": \"webapp\", \"sl\": \"auto\", \"tl\": (target || 'en'), \"hl\": (target || 'en'), \"dt\": \"t\", \"clearbtn\": '1', \"otf\": '1', \"pc\": '1', \"ssel\": '0', \"tsel\": '0', \"kc\": '2', \"tk\": \"\", \"q\": text})\n    return await new Promise(async (resolve, reject) => {\n        axiosFetch.get('https://translate.google.com/translate_a/single?' + query.toString(), {\n            headers: {\n                referer: 'https://translate.google.com/',\n                authority: 'translate.google.com'\n            }\n        }).then(response => {\n            if (response.data && Array.isArray(response.data[0])) {\n                resolve(raw ? response.data : response.data[0].filter(translate => translate).map(translate => translate[0]).join(''))\n                //resolve(response.data[0].filter(translate => translate).map(translate => translate[0]).join(''))\n            }\n            reject(raw ? response.data : 'Invalid content #GoogleTranslate ')\n        }).catch(e => {\n            reject(raw ? e : e.toString())\n        })\n    })\n}\n\nconst GoogleBrowserTranslate: TranslatorModuleFunction = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #GoogleTranslate ')}\n    if (!SupportedLanguage(GOOGLE_LANGUAGE, target || 'en')) {return await Promise.reject('Not supported target language #GoogleTranslate ')}\n\n    //curl 'https://translate.googleapis.com/translate_a/t?anno=3&client=wt_lib&format=html&v=1.0&key&sl=auto&tl=zh&tc=1&sr=1&tk=164775.366094&mode=1' --data-raw 'q=%E3%81%93%E3%82%93%E3%81%AB%E3%81%A1%E3%81%AF' --compressed\n    //https://vielhuber.de/zh-cn/blog-zh-cn/google-translation-api-hacking/\n    let query = new URLSearchParams({anno: '4', client: 'te_lib', format: 'html', v: '1.0', key: 'AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw', sl: 'auto', tl: (target || 'en'), tc: '1', sr: '1', tk: GoogleTranslateTk(text), mode: '1'})\n    //let formData = new URLSearchParams({q: text})\n    return await new Promise(async (resolve, reject) => {\n        axiosFetch.post('https://translate.googleapis.com/translate_a/t?' + query.toString(), 'q=' + ((text instanceof Array) ? text.map(x => encodeURIComponent(x)).join('&q=') : encodeURIComponent(text))).then((response: any) => {\n            if (response.data && response.data instanceof Array) {\n                resolve(raw ? response.data : response.data.map((x: any) => x?.[0] || '').join(\"\\n\"))\n            }\n            reject(raw ? response.data : 'Invalid content #GoogleTranslate ')\n        }).catch(e => {\n            reject(raw ? e : e.toString())\n        })\n    })\n}\n\nconst hl = function (a: number, b: string) {\n    let c = 0\n    for (; c < b.length - 2; c += 3) {\n        let d: string | number = b.charAt(c + 2)\n        d = \"a\" <= d ? (d.charCodeAt(0) - 87) : Number(d)\n        d = \"+\" == b.charAt(c + 1) ? (a >>> d) : (a << d)\n        a = \"+\" == b.charAt(c) ? (a + d & 4294967295) : (a ^ d)\n    }\n    return a\n}\nconst getCharCodeList = function (text: string) {\n    let charCodeList = [], charCodeListIndex = 0\n    for (let index = 0; index < text.length; index++) {\n        let charCode = text.charCodeAt(index)\n        if (128 > charCode) {\n            charCodeList[charCodeListIndex++] = charCode\n        } else {\n            if (2048 > charCode) {\n                charCodeList[charCodeListIndex++] = charCode >> 6 | 192\n            } else  {\n                if (55296 == (charCode & 64512) && index + 1 < text.length && 56320 == (text.charCodeAt(index + 1) & 64512)) {\n                    charCode = 65536 + ((charCode & 1023) << 10) + (text.charCodeAt(++index) & 1023)\n                    charCodeList[charCodeListIndex++] = charCode >> 18 | 240\n                    charCodeList[charCodeListIndex++] = charCode >> 12 & 63 | 128\n                } else {\n                    charCodeList[charCodeListIndex++] = charCode >> 12 | 224\n                }\n                charCodeList[charCodeListIndex++] = charCode >> 6 & 63 | 128\n            }\n            charCodeList[charCodeListIndex++] = charCode & 63 | 128\n        }\n    }\n    return charCodeList\n}\n\n//https://translate.google.com/translate_a/element?cb=gtElInit&hl=zh-CN&client=wt c._ctkk\nconst GoogleTranslateTk = (originalText: string | string[] = '', tkk: number[] = [464385, 3806605782]) => {\n    //from https://translate.googleapis.com/_/translate_http/_/js/k=translate_http.tr.zh_CN.D7QeyoDkDhY.O/d=1/exm=el_conf/ed=1/rs=AN8SPfq20C5s1IToiD2r2PKoyh-SRQysPA/m=el_main\n    let text\n    if (originalText instanceof Array) {\n        text = JSON.parse(JSON.stringify(originalText)).join('')\n    } else {\n        text = originalText\n    }\n    const charCodeList = getCharCodeList(text)\n    let a = tkk[0]\n    for (const charCode of charCodeList) {\n        a += charCode\n        a = hl(a, '+-a^+6')\n    }\n    a = hl(a, '+-3^+b+-f')\n    a ^= tkk[1] ? tkk[1] + 0 : 0\n    if (a < 0) {\n        a = (a & 2147483647) + 2147483648\n    }\n    a %= 1E6\n    return a.toString() + '.' + (a ^ tkk[0])\n}\n\nexport {GoogleTranslate, GoogleBrowserTranslate, GoogleTranslateTk}\n","import { BING_LANGUAGE, SupportedLanguage } from '../misc.js'\nimport { TranslatorModuleFunction } from '../types.js'\nimport axiosFetch from 'translator-utils-axios-helper'\n\nconst MicrosoftTranslator: TranslatorModuleFunction = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #MicrosoftTranslator ')}\n    if (!SupportedLanguage(BING_LANGUAGE, target || 'en')) {return await Promise.reject('Not supported target language #MicrosoftTranslator ')}\n\n    //get IG, token, key\n    //TODO fix type \n    let page: any | '' = ''\n    try {\n        page = await axiosFetch.get('https://www.bing.com/translator')\n    } catch (e) {\n        return await Promise.reject('Unable to get translator page #MicrosoftTranslator ')\n    }\n    if (page) {\n        let _G: any | null = null, params_AbusePreventionHelper: any | null = null\n        try {\n            _G = (new Function('return ' + /_G=(\\{.+?\\});/.exec(page.data || '')?.[1] || '{IG: \"\"}'))()\n            params_AbusePreventionHelper = (new Function('return ' + /params_AbusePreventionHelper = (\\[.+?\\]);/.exec(page.data || '')?.[1] || '[\"\", \"\"]'))()\n        } catch(e) {\n            return await Promise.reject('Unable to get variables #MicrosoftTranslator ')\n        }\n        return await new Promise(async (resolve, reject) => {\n            axiosFetch.post('https://www.bing.com/ttranslatev3?' + (new URLSearchParams({\n                isVertical: '1',\n                IG: _G.IG,\n                IID: 'translator.5024.1'\n            })).toString(), (new URLSearchParams({\n                fromLang: 'auto-detect',\n                text: Array.isArray(text) ? text.join(\"\\n\") : text,\n                to: (target || 'en'),\n                token: params_AbusePreventionHelper[1],\n                key: params_AbusePreventionHelper[0]\n            })).toString()).then((response: any) => {\n                if (!response.data.statusCode && response.data instanceof Array ) {\n                    resolve(raw ? response.data : response.data.map((x: any) => (x?.translations || []).map((translation: any) => translation?.text || '')).flat().join(\"\\n\"))\n                }\n                reject(raw ? response.data : 'Invalid content #MicrosoftTranslator ')\n            }).catch(e => {\n                reject(raw ? e : e.toString())\n            })\n        })\n    } else {\n        return await Promise.reject('Empty page #MicrosoftTranslator ')\n    }\n}\n\nconst GetMicrosoftBrowserTranslatorAuth = async () => {\n    try {\n        return (await axiosFetch.get('https://edge.microsoft.com/translate/auth')).data\n    } catch (e) {\n        return ''\n    }\n}\n\nconst MicrosoftBrowserTranslator: TranslatorModuleFunction = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #MicrosoftTranslator ')}\n    if (!SupportedLanguage(BING_LANGUAGE, target || 'en')) {return await Promise.reject('Not supported target language #MicrosoftTranslator ')}\n\n    //get jwt\n    const jwt = await GetMicrosoftBrowserTranslatorAuth()\n    if (jwt) {\n        return await new Promise(async (resolve, reject) => {\n            axiosFetch.post(`https://api.cognitive.microsofttranslator.com/translate?from=&to=${target}&api-version=3.0&includeSentenceLength=true`, JSON.stringify(text instanceof Array ? text.map(tmpText => ({Text: tmpText})) : [{Text: text}]), {\n                headers: {\n                    'content-type': 'application/json',\n                    authorization: `Bearer ${jwt}`\n                }\n            }).then((response: any) => {\n                if (response.data && response.data instanceof Array) {\n                    resolve(raw ? response.data : response.data.map((x: any) => (x?.translations || [])?.[0]?.text || '').join(\"\\n\"))\n                }\n                reject(raw ? response.data : 'Invalid content #MicrosoftTranslator ')\n            }).catch(e => {\n                reject(raw ? e : e.toString())\n            })\n        })\n    } else {\n        return await Promise.reject('Invalid jwt #MicrosoftTranslator ')\n    }\n    \n}\n\nexport { MicrosoftTranslator, MicrosoftBrowserTranslator, GetMicrosoftBrowserTranslatorAuth }\n","import { GoogleBrowserTranslate } from \"./source/google.js\"\nimport { MicrosoftBrowserTranslator } from \"./source/microsoft.js\"\nimport { SogouBrowserTranslator } from \"./source/sogou.js\"\n\nimport { BING_LIST, GOOGLE_LIST, SOGOU_LIST, TranslatorFunction } from \"types.js\"\n\nconst Translator: TranslatorFunction = async (text = '', platform, target, raw) => {\n    let result = {content: '', message: ''}\n    try {\n        switch (platform) {\n            case 'google':\n                result.content = await GoogleBrowserTranslate(text, target as GOOGLE_LIST, !!raw)\n                break\n            case 'microsoft':\n                result.content = await MicrosoftBrowserTranslator(text, target as BING_LIST, !!raw)\n                break\n            case 'sogou':\n                result.content = await SogouBrowserTranslator(text, target as SOGOU_LIST, !!raw)\n                break\n        }\n    } catch (e) {\n        result.message = String(e)\n    }\n    return result\n}\n\nexport default Translator\n","import { TranslatorModuleFunction } from '../types.js'\nimport { SOGOU_LANGUAGE, SupportedLanguage } from '../misc.js'\nimport axiosFetch from 'translator-utils-axios-helper'\n\nconst SogouBrowserTranslator: TranslatorModuleFunction = async (text = '', target, raw) => {\n    if (!text) {return await Promise.reject('Empty text #SogouTranslator ')}\n    if (!SupportedLanguage(SOGOU_LANGUAGE, target || 'en')) {return await Promise.reject('Not supported target language #SogouTranslator ')}\n\n    let body = JSON.stringify({\n        from_lang: \"auto\",\n        to_lang: target,\n        trans_frag: text instanceof Array ? text.map(x => ({text: x})) : [{text}]\n    })\n    return await new Promise(async (resolve, reject) => {\n        axiosFetch.post('https://go.ie.sogou.com/qbpc/translate', `S-Param=${body}`).then(response => {\n            if (response?.data?.data?.trans_result && response?.data?.data?.trans_result instanceof Array) {\n                resolve(raw ? response.data : (response.data.data.trans_result.map((x: any) => x.trans_text).join(\"\\n\") || ''))\n            }\n            reject(raw ? response.data : 'Invalid content #SogouTranslator ')\n        }).catch(e => {\n            reject(raw ? e : e.toString())\n        })\n    })\n}\n\nexport {SogouBrowserTranslator}\n"],"names":["GOOGLE_LANGUAGE","BING_LANGUAGE","SOGOU_LANGUAGE","SupportedLanguage","List","language","map","x","toLowerCase","includes","axiosFetch","requestHandle","url","postData","options","timeout","validPostRequest","method","headers","JSON","stringify","length","body","Promise","resolve","reject","fetch","then","async","response","data","text","res","this","responseBuilder","catch","e","cause","toString","parse","Object","fromEntries","entries","getAll","filter","header","status","statusText","get","post","hl","a","b","c","d","charAt","charCodeAt","Number","GoogleTranslateTk","originalText","tkk","Array","join","charCodeList","charCodeListIndex","index","charCode","getCharCodeList","MicrosoftBrowserTranslator","target","raw","jwt","GetMicrosoftBrowserTranslatorAuth","tmpText","Text","authorization","translations","platform","result","content","message","query","URLSearchParams","anno","client","format","v","key","sl","tl","tc","sr","tk","mode","encodeURIComponent","GoogleBrowserTranslate","from_lang","to_lang","trans_frag","trans_result","trans_text","SogouBrowserTranslator","String"],"mappings":"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"}